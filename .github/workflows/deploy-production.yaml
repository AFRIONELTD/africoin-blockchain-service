# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Deploy to Production Env
on:
  push:
    branches:  [ "production" ]
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKERHUB_KEY: ${{ secrets.DOCKER_KEY }}
  IMAGE_NAME: africoin-blockchain-service
  MANIFEST_DIR: apps/afrione-prod
  GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
  GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
  RUN_NUMBER: ${{ github.run_number }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_KEY }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:prod-app-${{ github.run_number }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: deploying application with new image tag
        with:
          repository: 'AFRIONELTD/argocd'
          token: ${{ secrets.GIT_TOKEN }}
          ref: main
      - name: update image
        run: |
          cd ${{ env.MANIFEST_DIR }}
          sed -i "s|${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}.*|${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:prod-app-${{ github.run_number }}|g" africoin-blockchain-service.yaml  
          git config user.email info@afrione.co
          git config user.name AFRIONELTD
          git add africoin-blockchain-service.yaml
          git diff --staged  # Debugging: print the changes to be committed
          git commit -m "Deploy Africoin Blockchain Service with new image tag: ${{ github.run_number }}"
          git push origin main
